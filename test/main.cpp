#include <QCoreApplication>

#include <QTextStream>
#include <include/qdotnetevent.h>

/// AUTO-GENERATED
/// This file is autogenerated by tdotnetbridge.Generator
/// Changes to this file may be overwritten on build!

#ifndef DOTNET_MANAGED_GENERATED_CLASS_CLASSLIBRARY2_TESTOBJECTCLASS
    #define DOTNET_MANAGED_GENERATED_CLASS_CLASSLIBRARY2_TESTOBJECTCLASS

    #include <include/qdotnetobject.h>

class TestObjectClass : public QDotNetObject {
    public:
        Q_DOTNET_OBJECT_INLINE(TestObjectClass, "ClassLibrary2.TestObjectClass");

        TestObjectClass() :
            QDotNetObject(constructor<TestObjectClass>().invoke(nullptr)) {}
        TestObjectClass(const QString& prefix) :
            QDotNetObject(constructor<TestObjectClass, QString>().invoke(nullptr, prefix)) {}

        void writeMessage(const QString& message) {
            return method("WriteMessage", _fn_WriteMessage).invoke(*this, message);
        }
        int add(const int& addend, const int& addend2) {
            return method("Add", _fn_Add).invoke(*this, addend, addend2);
        }

    private:
        QDotNetFunction<void, QString> _fn_WriteMessage;
        QDotNetFunction<int, int, int> _fn_Add;
};

#endif // DOTNET_MANAGED_GENERATED_CLASS_CLASSLIBRARY2_TESTOBJECTCLASS

int main(int argc, char** argv) {
    QCoreApplication a(argc, argv);
    QDotNetHost dotnetHost;
    dotnetHost.load();

    if (!dotnetHost.isLoaded()) {
        QTextStream(stderr) << "Not loaded\n";
    } else {
        QTextStream(stderr) << ".NET ready\n";
    }

    QDotNetFunction<void> helloWorldFunction;
    dotnetHost.resolveFunction(helloWorldFunction, "/home/victor/RiderProjects/ClassLibrary2/ClassLibrary2/bin/Debug/net7.0/ClassLibrary2.dll", "ClassLibrary2.Class1, ClassLibrary2", "HelloWorld", "ClassLibrary2.Class1+HelloWorldDelegate, ClassLibrary2");
    helloWorldFunction();

    QDotNetAdapter::init("/home/victor/Documents/Apps/tdotnetbridge/bridge/tdotnetbridge/tdotnetbridge.Adapter/bin/Debug/net7.0/tdotnetbridge.Adapter.dll", "tdotnetbridge.Adapter", "Qt.DotNet.Adapter");
    QDotNetAdapter::instance().loadAssembly("/home/victor/RiderProjects/ClassLibrary2/ClassLibrary2/bin/Debug/net7.0/ClassLibrary2.dll");

    TestObjectClass testDotNetClass;
    testDotNetClass.writeMessage("Message from Qt");

    testDotNetClass.writeMessage(QStringLiteral("1 + 2 yields %1").arg(testDotNetClass.add(1, 2)));

    TestObjectClass testDotNetClassWithPrefix(QStringLiteral("prefix: "));
    testDotNetClassWithPrefix.writeMessage("prefixed message");

    return a.exec();
}
